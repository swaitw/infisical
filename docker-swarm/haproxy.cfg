global
    maxconn 10000
    log stdout format raw local0

defaults
    log global
    mode tcp
    retries 3
    timeout client 30m
    timeout connect 10s
    timeout server 30m
    timeout check 5s

listen stats
    mode http
    bind *:7000
    stats enable
    stats uri /

resolvers hostdns
    nameserver dns 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry 1s
    hold valid 5s

frontend postgres_master
    bind *:5433
    default_backend postgres_master_backend

frontend postgres_replicas
    bind *:5434
    default_backend postgres_replica_backend


backend postgres_master_backend
    option httpchk GET /master
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    server postgres-1 postgres-1:5432 check port 8008 resolvers hostdns
    server postgres-2 postgres-2:5432 check port 8008 resolvers hostdns
    server postgres-3 postgres-3:5432 check port 8008 resolvers hostdns

backend postgres_replica_backend
    option httpchk GET /replica
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    server postgres-1 postgres-1:5432 check port 8008 resolvers hostdns
    server postgres-2 postgres-2:5432 check port 8008 resolvers hostdns
    server postgres-3 postgres-3:5432 check port 8008 resolvers hostdns


frontend redis_master_frontend
  bind *:6379
  default_backend redis_master_backend

backend redis_master_backend
  option tcp-check
  tcp-check send AUTH\ 123456\r\n
  tcp-check expect string +OK
  tcp-check send PING\r\n
  tcp-check expect string +PONG
  tcp-check send info\ replication\r\n
  tcp-check expect string role:master
  tcp-check send QUIT\r\n
  tcp-check expect string +OK
  server redis_master redis_replica0:6379 check inter 1s
  server redis_replica1 redis_replica1:6379 check inter 1s
  server redis_replica2 redis_replica2:6379 check inter 1s

frontend infisical_frontend
  bind *:8080
  default_backend infisical_backend

backend infisical_backend
  option httpchk GET /api/status
  http-check expect status 200
  server infisical infisical:8080 check inter 1s
